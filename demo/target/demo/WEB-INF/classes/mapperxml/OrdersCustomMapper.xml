<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间，作用：对sql进行分类管理，理解sql隔离 注意：使用mapper代理方法时，namespace有特殊重要的作用,namespace等于mapper接口地址 -->
<mapper namespace="com.justin.ssm.mapper.OrdersCustomMapper">

<!--************************************定义resultMap ****************************-->
	<!-- 定义resultMap （一对一）
	将整个查询的结果映射到Orders中
	-->
	<resultMap type="com.justin.ssm.po.Orders" id="OrdersUserResultMap">
		<!-- 配置映射的订单信息 -->
		<!-- id:指定查询列表的唯一标识，订单信息中的唯一标识，如果有多个列组成唯一标识，配置多个id -->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		
		<!-- 配置映射的关联用户信息
		association:用于映射关联查询单个对象的信息
		property:要将关联查询的用户信息映射到Orders中那个属性
		 -->
		<association property="user" javaType="com.justin.ssm.po.User">
			<!-- id: 关联查询用户的唯一标识
			column:指定唯一标识用户的列
			property:映射到user的哪个属性
			-->
			<id column="user_id" property="id"/>
			<result column="username" property="username"/>
			<result column="sex" property="sex"/>
			<result column="address" property="address"/>
		</association>
	</resultMap>
	
	<!-- 定义订单及订单明细的resultMap（一对多）
	使用extends继承，不用在此种配置用户信息和订单信息的映射
	-->
	<resultMap type="com.justin.ssm.po.Orders" id="OrdersAndOrderdetailResultMap" extends="OrdersUserResultMap">
		<!-- 配置映射的关联订单明细信息
		一个订单关联查询出多条明细，要使用collection进行映射
		collection:对关联查询到的多条记录映射到集合对象中
		property:要将关联查询的订单明细信息映射到Orders中那个属性
		ofType:指定映射到集合属性中pojo的类型
		 -->
		 <collection property="orderdetails" ofType="com.justin.ssm.po.Orderdetail">
			<!-- id: 关联查询订单明细的唯一标识
			column:指定唯一标识订单明细的列
			property:映射到orderdetail的哪个属性
			-->
			<id column="orderdetail_id" property="id"/>
			<result column="orders_id" property="ordersId"/>
			<result column="items_id" property="itemsId"/>
			<result column="items_num" property="itemsNum"/>
		 </collection>
	</resultMap>
	
	<!-- 定义查询用户及购买的商品的resultMap （多对多）-->
	<resultMap type="com.justin.ssm.po.User" id="UserAndItemsResultMap">
		<!-- 配置用户信息 -->
		<id column="user_id" property="id"/>
		<result column="username" property="username"/>
		<result column="sex" property="sex"/>
		<result column="address" property="address"/>
	
		<!-- 配置订单信息 ，一个用户对应多个订单-->
		<collection property="orderslist" ofType="com.justin.ssm.po.Orders">
			<id column="id" property="id"/>
			<result column="user_id" property="userId"/>
			<result column="number" property="number"/>
			<result column="createtime" property="createtime"/>
			<result column="note" property="note"/>
			<!-- 配置订单明细信息 ，一个订单对应多个订单明细-->
			<collection property="orderdetails" ofType="com.justin.ssm.po.Orderdetail">
				<id column="orderdetail_id" property="id"/>
				<result column="orders_id" property="ordersId"/>
				<result column="items_id" property="itemsId"/>
				<result column="items_num" property="itemsNum"/>
				<!-- 商品信息 ，一个订单明细对应一个商品-->
				<association property="items" javaType="com.justin.ssm.po.Items">
					<id column="items_id" property="id"/>
					<result column="name" property="name"/>
					<result column="price" property="price"/>
				</association>
			</collection>
		 </collection>
	</resultMap>
	
	<!-- 定义延迟加载的resultMap -->
	<resultMap type="com.justin.ssm.po.Orders" id="OrdersUserlazyLoadingResultMap">
		<!-- 对订单信息进行映射配置 -->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		<!-- 实现用户信息进行延迟加载 
		select:指定延迟加载需要执行的statement的id（是根据user_id查询用户信息的statement）
		要使用userMapper.xml中findUserById完成根据用户id（user_id）查询用户的信息，
		如果findUserById不在本mapper中需要前边加namespace
		column:订单信息中关联用户信息查询的列是user_id
		-->
		<association property="user" javaType="com.justin.ssm.po.User" 
			select="com.justin.ssm.mapper.UserMapper.findUserById" column="user_id">
		</association>
	</resultMap>


<!--************************************sql语句 ****************************-->
	
	<!-- 查询订单关联查询用户信息 ，使用resultMap（一对一）-->
	<select id="findOrdersUserResultMap" resultMap="OrdersUserResultMap">
		Select
			orders.*,
			user.username,
			user.sex,
			user.address
		from orders,user 
		where orders.user_id=user.id;
	</select>
	
	<!-- 查询订单关联查询用户信息及订单明细 ，使用resultMap（一对多）-->
	<select id="findOrdersAndOrderdetailResultMap" resultMap="OrdersAndOrderdetailResultMap">
		Select
			orders.*,
			user.username,
			user.sex,
			user.address,
			orderdetail.id orderdetail_id,
			orderdetail.orders_id,
			orderdetail.items_id,
			orderdetail.items_num
		from orders,user,orderdetail
		where orders.user_id=user.id and orderdetail.orders_id=orders.id;
	</select>
	
	<!-- 查询用户及购买的商品信息 ，使用resultMap（多对多）-->
	<select id="findUserAndItemsResultMap" resultMap="UserAndItemsResultMap">
		Select
			orders.*,
			user.username,
			user.sex,
			user.address,
			orderdetail.id orderdetail_id,
			orderdetail.orders_id,
			orderdetail.items_id,
			orderdetail.items_num,
			items.id items_id,
			items.name,
			items.price
		from orders,user,orderdetail,items
		where orders.user_id=user.id and orderdetail.orders_id=orders.id and orderdetail.items_id=items.id;
	</select>
	
	<!-- 查询订单关联查询用户信息 -->
	<select id="findOrdersUser" resultType="com.justin.ssm.po.OrdersCustom">
		Select
		orders.*,user.username,user.sex,user.address
		from orders,user
		where orders.user_id=user.id;
	</select>
	
	<!-- 查询订单关联查询用户信息,用户信息查询延迟加载 -->
	<select id="findOrdersUserlazyLoading" resultMap="OrdersUserlazyLoadingResultMap">
		Select orders.* from orders;
	</select>
	
	
	
</mapper>







